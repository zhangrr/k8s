- name: Initialize Kubernetes master with kubeadm init.
  command: >
    kubeadm init
    --pod-network-cidr={{ k8s_pod_network.cidr }}
    --service-cidr={{ k8s_pod_network.svc }}
    --service-dns-domain={{ k8s_pod_network.localdns }}
  register: kubeadmin_init
  when: not k8s_init_stat.stat.exists

- name: Print the init output to screen.
  debug:
    var: kubeadmin_init.stdout
    verbosity: 2
  when: not k8s_init_stat.stat.exists

- name: create .kube directory
  become: yes
  become_user: centos
  file:
    path: /home/centos/.kube
    state: directory
    mode: 0755

- name: copy admin.conf to user's kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/centos/.kube/config
    remote_src: yes
    owner: centos

- name: Ensure .kube directory exists.
  file:
    path: ~/.kube
    state: directory
    mode: 0755

- name: Symlink the kubectl admin.conf to ~/.kube/conf.
  file:
    src: /etc/kubernetes/admin.conf
    dest: ~/.kube/config
    state: link
    mode: 0644

- name: download
  get_url:
    url: "{{ k8s_flannel_manifest_file }}"
    dest: /tmp/kube-flannel.yml
    mode: 0744
    validate_certs: yes
  environment:
    https_proxy: "{{ k8s_http_proxy }}"

- name: configure flannel image
  replace:
    path: /tmp/kube-flannel.yml
    regexp: "image: quay.io/coreos/flannel:v0.12.0-amd64"
    replace: "image: {{ docker_insecure_registry }}/library/quay.io/coreos/flannel:v0.12.0-amd64"

- name: configure flannel svc address
  replace:
    path: /tmp/kube-flannel.yml
    regexp: "10.244.0.0/16"
    replace: "{{ k8s_pod_network.svc }}"

- name: Configure Flannel networking.
  command: "{{ item }}"
  with_items:
    - kubectl apply -f /tmp/kube-flannel.yml
  register: flannel_result
  changed_when: "'created' in flannel_result.stdout"
  when: k8s_pod_network.cni == 'flannel'

- name: ipvs deploy
  become: yes
  become_user: centos
  shell: "kubectl get cm kube-proxy -n kube-system -o yaml | sed 's/mode: \"\"/mode: \"ipvs\"/' | kubectl apply -f -"

- name: ipvs arp deploy
  become: yes
  become_user: centos
  shell: "kubectl get cm kube-proxy -n kube-system -o yaml | sed 's/strictARP: false/strictARP: true/' | kubectl apply -f -"

- name: destroy kube-proxy pod
  become: yes
  become_user: centos
  shell: kubectl get pod -n kube-system | grep kube-proxy | awk '{system("kubectl delete pod "$1" -n kube-system")}'
